{"version":3,"sources":["pages/Demo.js","components/common/Header/Header.js","pages/Main.js","components/common/Button/Button.js","components/common/NotFound/NotFound.js","pages/NotFoundPage.js","components/App.js","store/modules/base.js","store/modules/editor.js","store/configure.js","Root.js","serviceWorker.js","index.js"],"names":["Demo","react_default","a","createElement","Header","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Main","common_Header_Header","cx","classNames","bind","styles","Div","_ref","children","rest","Object","objectWithoutProperties","Button","_ref2","to","onClick","_ref2$theme","theme","Element","Link","defaultProps","console","warn","NotFound","onGoBack","common_Button_Button","NotFoundPage","history","common_NotFound_NotFound","goBack","App","Switch","Route","exact","path","component","initialState","createAction","Map","handleActions","defineProperty","state","set","reducers","combineReducers","modules","composeEnhancers","compose","store","preloadedState","createStore","configure","Root","es","BrowserRouter","basename","process","components_App","Boolean","window","location","hostname","match","ReactDOM","render","src_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee7851e0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Demo = () => <div>Demo</div>;\n\nexport default Demo;\n","import React from 'react';\nimport './Header.scss';\n\nconst Header = () => (\n  <div>\n    <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"mainNav\">\n      <div className=\"container\">\n        <a className=\"navbar-brand js-scroll-trigger\" href=\"/\">\n          Planet\n        </a>\n        <button\n          className=\"navbar-toggler navbar-toggler-right\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarResponsive\"\n          aria-controls=\"navbarResponsive\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"/about\">\n                About\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"/feature\">\n                Feature\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"/download\">\n                Download\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"/demo\">\n                Demo\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"/contact\">\n                Contact\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n\n    <header className=\"masthead text-center text-white d-flex\">\n      <div className=\"container my-auto\">\n        <div className=\"row\">\n          <div className=\"col-lg-10 mx-auto\">\n            <h1 className=\"text-uppercase\">\n              <strong>Your Favorite Source of Free Bootstrap Themes</strong>\n            </h1>\n            <hr />\n          </div>\n          <div className=\"col-lg-8 mx-auto\">\n            <p className=\"text-faded mb-5\">\n              Start Bootstrap can help you build better websites using the Bootstrap CSS framework!\n              Just download your template and start going, no strings attached!\n            </p>\n            <a className=\"btn btn-primary btn-xl js-scroll-trigger\" href=\"/demo\">\n              Get Started\n            </a>\n          </div>\n        </div>\n      </div>\n    </header>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport Header from 'components/common/Header';\n\nconst Main = () => (\n  <div>\n    <Header />\n  </div>\n);\n\nexport default Main;\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Button.scss';\n\nconst cx = classNames.bind(styles);\nconst Div = ({ children, ...rest }) => <div {...rest}>{children}</div>;\n\nconst Button = ({\n  children, to, onClick, theme = 'default',\n}) => {\n  const Element = to ? Link : Div;\n  return (\n    <Element to={to} className={cx('button', theme)} onClick={onClick}>\n      {children}\n    </Element>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired,\n  to: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  to: '',\n  onClick: () => {\n    console.warn('onClick not defined');\n  },\n};\n\nexport default Button;\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport Button from 'components/common/Button';\nimport PropTypes from 'prop-types';\nimport styles from './NotFound.scss';\n\nconst cx = classNames.bind(styles);\n\nconst NotFound = ({ onGoBack }) => (\n  <div className={cx('not-found')}>\n    <h2>존재하지 않는 페이지입니다.</h2>\n    <Button onClick={onGoBack} theme=\"outline\">\n      돌아가기\n    </Button>\n  </div>\n);\n\nNotFound.propTypes = {\n  onGoBack: PropTypes.func,\n};\n\nNotFound.defaultProps = {\n  onGoBack: () => {\n    console.warn('onGoBack not defined');\n  },\n};\n\nexport default NotFound;\n","import React from 'react';\nimport NotFound from 'components/common/NotFound';\nimport PropTypes from 'prop-types';\n\nconst NotFoundPage = ({ history }) => <NotFound onGoBack={history.goBack} />;\n\nNotFoundPage.propTypes = {\n  history: PropTypes.shape({ goBack: PropTypes.func }).isRequired,\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Demo, Main, NotFoundPage } from 'pages';\n\nconst App = () => (\n  <div>\n    <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route exact path=\"/Demo\" component={Demo} />\n      <Route exact component={NotFoundPage} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import { createAction, handleActions } from 'redux-actions';\nimport { Map } from 'immutable';\n\n// action types\nconst DOMMY = 'base/DOMMY';\n\n// action creators\nexport const dommy = createAction(DOMMY);\n\n// initialState\nconst initialState = Map({});\n\n// reducer\nexport default handleActions(\n  {\n    [DOMMY]: state => state.set('dommy', true),\n  },\n  initialState,\n);\n","import { createAction, handleActions } from 'redux-actions';\nimport { Map } from 'immutable';\n\n// action types\nconst DOMMY = 'header/DOMMY';\n\n// action creators\nexport const dommy = createAction(DOMMY);\n\n// initialState\nconst initialState = Map({});\n\n// reducer\nexport default handleActions(\n  {\n    [DOMMY]: state => state.set('dommy', true),\n  },\n  initialState,\n);\n","import { createStore, compose, combineReducers } from 'redux';\nimport * as modules from './modules';\n\nconst reducers = combineReducers(modules);\n\nconst isDev = process.env.NODE_ENV === 'development';\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = devtools || compose;\n\nconst configure = preloadedState => createStore(reducers, preloadedState, composeEnhancers());\n\nexport default configure;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from 'components/App';\nimport { Provider } from 'react-redux';\nimport configure from 'store/configure';\n\nconst store = configure();\n\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nexport default Root;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\nimport 'styles/base.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}